package graphic_zip;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;

import javax.imageio.ImageIO;

import com.sun.image.codec.jpeg.JPEGCodec;
import com.sun.image.codec.jpeg.JPEGEncodeParam;
import com.sun.image.codec.jpeg.JPEGImageEncoder;

import net.coobird.thumbnailator.Thumbnails;





public class filecompress {
	
	
	  //初始压缩比率
	  private float IntialCompressRate = 1f;
	  private int LimitSizeKB = 0;
	
	//构造函数可以设置压缩比率
	  public filecompress(float IntialCompressRate,int LimitSizeKB) {
		  
		  this.IntialCompressRate = IntialCompressRate;
		  this.LimitSizeKB = LimitSizeKB;
		  
	  }
	  
	//构造函数默认压缩比率
	  public filecompress() {
		  
		   this.IntialCompressRate = 0.25f;
		   this.LimitSizeKB =500;
		   
	  }
	
	  
	  
	  //压缩函数
	  public String compressPic(String inputDir, 
			                           String outputDir,
			                           String inputFileName,
			                           String outputFileName) {    
		  
      	String InPutFileInformation = inputDir + inputFileName;
    	
        File InPutFile = new File(InPutFileInformation); 
        
        float ReminderCompressRate = IntialCompressRate;
        
        if(InPutFile.length()<(500*1024))
        {
        	return "默认文件文件已经小"+LimitSizeKB+"kb，不需要压缩";
        }
		  
	        try {  
	        
	            if(InPutFile.exists()){
	            	
	            	String OutPutFileInformation = outputDir + outputFileName; 
	            	
	            	File OutPutFile = new File(OutPutFileInformation); 
	            	
	            	Thumbnails.of(InPutFileInformation).scale(1f).outputQuality(ReminderCompressRate).toFile(OutPutFile);
	         	    
	                if(OutPutFile.length()<(LimitSizeKB*1024))
	                {
	                	
	                	return "压缩成功，文件小鱼"+LimitSizeKB+"kb，输出";
	                }
	            	
	                else {
	                	ReminderCompressRate = ReminderCompressRate - 0.1f;
	                	
	                	if (ReminderCompressRate < 0.1f  ) {
	                		
	                		ReminderCompressRate = 0.1f;
	                		Thumbnails.of(InPutFileInformation).scale(1f).outputQuality(ReminderCompressRate).toFile(OutPutFile);
	                		return "已经达成了极限压缩比，不能比压缩比" + ReminderCompressRate + "更小";
							
						}
	                	
	                	compressPic(inputDir,outputDir,inputFileName,outputFileName);
	                	
					}
	            	 	
	            }
	                      
	            else{
	            	return InPutFileInformation + "找不到这个压缩文件";
	            }
	            
	         } catch (IOException ex) {  
	        	System.out.println(ex);
	        	System.out.println(InPutFileInformation+"压缩比率"+IntialCompressRate+"文件压缩不成功");
	            ex.printStackTrace();  
	            return inputFileName;  
	        }  
	        
	        return outputFileName;  
	    }  

	  
	  

}
